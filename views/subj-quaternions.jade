doctype html
html

body
    h3 Why use Quaternions

    p Quaternion is a tool for performing rotation. There are already two other techniques that can do the job: Euler angles and rotation matrix. So why do we need quaternions?

    p As you may see, there are drawbacks for those two methods:

    p 1) Euler angle is intuitive and easy to use at first, but it requires a certain order, like x/y/z, z/x/y or sometimes even z/x/z. No matter what the sequence is, a problem called "gimble lock" is unavoidable. For instance, if the sequence is x/y/z, and the y-rotation is pi/2, then the x-rotation and the later z-rotation are doing the same rotation, thus one degree of freedom is lost. You can also observe it if you inspect the resulted matrix.

    p 2) Rotation matrix (3x3) is commonly used in graphics pipelines. Although it may be more efficient than quaternions since modern GPUs have a lot of optimizations for matrix computation, the representation is somewhat too complicated (9 numbers). The construction is complicated as well.

    p Compared to the other two, quaternion is more elegant in its representation (x, y, z, w), and it avoids the issue of gimble lock. Besides, it is more handy when it comes to tasks like slerp.

    p Although quaternions were invented in 1843 as an extension to the complex numbers, it was not until 1985 that it was introduced to computer graphics. Note that only unit quaternions are able to do rotations. So make sure they are normalized when you use them.

    h3 A simple demo of unit quaternions

    div(id="view-simple")

    h3 Spherical linear interpolation

    p Spherical linear interpolation (slerp) is an operation that, given two unit quaternions, q and r, and a parameter t in the range[0, 1], computes an interpolated quaternion. Unlike conventional linear interpolation, it produces evenly distributed samples along the arc, which is really important for animations.

    script(src="/javascripts/subj-quaternions.js", type="module")