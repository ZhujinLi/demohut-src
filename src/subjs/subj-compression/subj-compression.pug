extends ../../layout

block content

    p Strangely enough, for these many years I've learnt programming, never have I tried compressing a file with hand-written code.

    p <strong>Huffman encoding</strong> is one of the most classic lossless compression algorithms. Here I'm using it to compress/decompress files as a coding practice.

    p It turns out to be more difficult than I expected, as there are quite a lot of things to consider about:

    ul
        li Binary format design
        li File IO
        li Binary tree
        li Priority queue (optional, for optimization of codebook generation)
        li Bit stream reader/writer (the most tricky and buggy one)
        li State machine (not necessary if performance is not the concern)
    
    input#input-file(type="file")
    hr

    #info.text-monospace(style="display: none")
        h5 Original size
        p#text-orig-size

        h5 Compressed size
        p#text-comp-size

        h5 Compression ratio
        p#text-comp-ratio

        h5 Compression time
        p#text-comp-time

        h5 Decompression time
        p#text-decomp-time

        h5 Verification
        p#text-verify

        h5 Histogram
        div(style="position: relative; width: 4000px; height: 200px")
            canvas#chart-hist

        h5 Code book
        table#table-codes.table.small.col-md-6

    .alert-info.
        What is the probability that the compressed size is exactly the same? I've encountered one in the first few minutes of testing.

    hr

    .sub-title.
        Decompressor

    input#input-file-decomp(type="file")


    script(src="./subj-compression.js", type="module")